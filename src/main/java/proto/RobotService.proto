syntax = "proto3";

option java_package = "proto";

service RobotService {
  rpc SendConnectionInfo(RobotNetworkRequest) returns (RobotNetworkResponse) {}
  rpc SayGoodbye (GoodbyeRequest) returns (GoodbyeResponse) {}
  rpc RequestMutex(MutexRequest) returns (MutexResponse) {}
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse) {}
  rpc SendPeerBalancingRequest(PeerBalancingRequest) returns (PeerBalancingResponse) {}
}

message RobotNetworkRequest {
  string id = 1;
  Position position = 2;
  Server robotServer = 3;
}

message Server {
  int32 port = 1;
  string host = 2;
}

message Position {
  int32 x = 1;
  int32 y = 2;
  int32 districtNumber = 3;
}

message RobotNetworkResponse {
  string id = 1;
  string result = 2;
  Server receiverServer = 3;
}

message GoodbyeRequest {
  string id = 1;
}

message GoodbyeResponse {
  bool result = 1;
}

message MutexRequest {
  string id = 1;
  int64 timestamp = 2;
  int32 logicalTimestamp = 3;
}

message MutexResponse {
  string id = 1;
  bool ack = 2;
  int32 logicalTimestamp = 3;
}

message HeartbeatRequest {
  string id = 1;
}

message HeartbeatResponse {
  bool success = 1;
}

message PeerBalancingInfo {
  Position unbalancedPosition = 1;
  Position balancedPosition = 2;
}

message PeerBalancingRequest {
  string senderID = 1;
  PeerBalancingInfo peerBalancingInfo = 2;
}

message PeerBalancingResponse {
  string id = 1;
  bool agree = 2;
}

